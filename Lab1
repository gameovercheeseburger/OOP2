using System;
using System.Collections.Generic;
using System.Linq;

class Person
{
    public int personId;
    public string firstName;
    public string lastName;
    public string favoriteColour;
    public int age;
    public bool isWorking;

    public void DisplayPersonInfo()
    {
        Console.WriteLine($"Name: {firstName} {lastName}\npersonId: {personId} Nameâ€™s favorite color is {favoriteColour}");
    }

    public void ChangeFavoriteColour()
    {
        favoriteColour = "Orange";
    }

    public int GetAgeInTenYears()
    {
        return age + 10;
    }

    public override string ToString()
    {
        return $"PersonId: {personId}\nFirstName: {firstName}\nLastName: {lastName}\nFavoriteColour: {favoriteColour}\nAge: {age}\nIsWorking: {isWorking}";
    }
}

class Relation
{
    public string RelationshipType;

    public void ShowRelationship(Person person1, Person person2)
    {
        Console.WriteLine($"Relationship between {person1.firstName} and {person2.firstName} is: {RelationshipType}");
    }
}

class MainClass
{
    public static void Main(string[] args)
    {
        List<Person> peopleList = new List<Person>();
        Person person1 = new Person { personId = 1, firstName = "Ian", lastName = "Brooks", favoriteColour = "Red", age = 30, isWorking = true };
        Person person2 = new Person { personId = 2, firstName = "Gina", lastName = "James", favoriteColour = "Green", age = 18, isWorking = false };
        Person person3 = new Person { personId = 3, firstName = "Mike", lastName = "Briscoe", favoriteColour = "Blue", age = 45, isWorking = true };
        Person person4 = new Person { personId = 4, firstName = "Mary", lastName = "Beals", favoriteColour = "Yellow", age = 28, isWorking = true };

        Console.WriteLine($"{person2.personId}: {person2.firstName} {person2.lastName}'s favorite colour is {person2.favoriteColour}");
        Console.WriteLine(person3.ToString());
        person1.ChangeFavoriteColour();
        Console.WriteLine($"{person1.personId}: {person1.firstName} {person1.lastName}'s favorite colour is: {person1.favoriteColour}");
        Console.WriteLine($"{person4.firstName} {person4.lastName}'s Age in 10 years is: {person4.GetAgeInTenYears()}");
        Relation sisterRelation = new Relation { RelationshipType = "Sisterhood" };
        Relation brotherRelation = new Relation { RelationshipType = "Brotherhood" };

        sisterRelation.ShowRelationship(person2, person4);
        brotherRelation.ShowRelationship(person1, person3);
        peopleList.Add(person1);
        peopleList.Add(person2);
        peopleList.Add(person3);
        peopleList.Add(person4);
        DisplayListInformation(peopleList);
    }

    static void DisplayListInformation(List<Person> peopleList)
    {
        double averageAge = peopleList.Average(p => p.age);
        Person youngestPerson = peopleList.OrderBy(p => p.age).First();
        Person oldestPerson = peopleList.OrderByDescending(p => p.age).First();
        Console.WriteLine($"Average age is: {averageAge}");
        Console.WriteLine($"The youngest person is: {youngestPerson.firstName}");
        Console.WriteLine($"The oldest person is: {oldestPerson.firstName}");
        Console.WriteLine("People whose first names start with M:");
        foreach (var person in peopleList.Where(p => p.firstName.StartsWith("M")))
        {
            Console.WriteLine(person.ToString());
        }
        Console.WriteLine("Person information of the person that likes the colour blue:");
        foreach (var person in peopleList.Where(p => p.favoriteColour.ToLower() == "blue"))
        {
            Console.WriteLine(person.ToString());
        }
    }
}
